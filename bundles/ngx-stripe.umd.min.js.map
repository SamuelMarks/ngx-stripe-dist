{
  "version": 3,
  "file": "ngx-stripe.umd.min.js",
  "sources": [
    "ng://ngx-stripe/node_modules/tslib/tslib.es6.js",
    "ng://ngx-stripe/out/src/services/window-ref.service.ts",
    "ng://ngx-stripe/out/src/services/document-ref.service.ts",
    "ng://ngx-stripe/out/src/services/api-loader.service.ts",
    "ng://ngx-stripe/out/src/interfaces/stripe.ts",
    "ng://ngx-stripe/out/src/interfaces/sources.ts",
    "ng://ngx-stripe/out/src/interfaces/token.ts",
    "ng://ngx-stripe/out/src/services/stripe-instance.class.ts",
    "ng://ngx-stripe/out/src/services/stripe.service.ts",
    "ng://ngx-stripe/out/src/services/stripe-factory.service.ts",
    "ng://ngx-stripe/out/src/components/stripe-card.component.ts",
    "ng://ngx-stripe/out/src/modules/ngx-stripe.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n",
    "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n",
    "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\n\nexport interface Status {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  private status: BehaviorSubject<Status> = new BehaviorSubject<Status>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    private window: WindowRef,\n    private document: DocumentRef\n  ) {}\n\n  public asStream(): Observable<Status> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: Status = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nimport { Elements, ElementsOptions } from './elements';\nimport { Element } from './element';\nimport { BankAccount, BankAccountData, CardDataOptions, Pii, PiiData, TokenResult } from './token';\nimport { SourceData, SourceParams, SourceResult } from './sources';\nimport { PaymentRequestOptions } from './payment-request';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>(\n  'Stripe Publishable Key'\n);\nexport const STRIPE_OPTIONS = new InjectionToken<Options>('Stripe Options');\n\nexport interface StripeJS {\n  elements(options?: ElementsOptions): Elements;\n\n  createToken(el: Element, cardData?: CardDataOptions): Promise<TokenResult>;\n\n  createToken(\n    account: BankAccount,\n    bankAccountData: BankAccountData\n  ): Promise<TokenResult>;\n\n  createToken(pii: Pii, piiData: PiiData): Promise<TokenResult>;\n\n  createSource(el: Element, sourceData?: SourceData): Promise<SourceResult>;\n\n  createSource(sourceData: SourceData): Promise<SourceResult>;\n\n  retrieveSource(source: SourceParams): Promise<SourceResult>;\n\n  paymentRequest(options: PaymentRequestOptions): any;\n}\n\nexport interface Options {\n  stripeAccount?: string;\n}\n",
    "import { Address, Error } from './utils';\n\nexport interface Source {\n  id: string;\n  object: 'source';\n  amount: number;\n  client_secret: string;\n  code_verification?: {\n    attempts_remaining: number;\n    status: 'pending' | 'succeded' | 'failed';\n  };\n  created: number;\n  currency: string;\n  flow: FlowTypes;\n  livemode: boolean;\n  metadata: { [key: string]: any };\n  owner: {\n    address: Address;\n    email: string;\n    name: string;\n    phone: string;\n    verified_address: Address;\n    verified_email: string;\n    verified_name: string;\n    verified_phone: string;\n  };\n  receiver: {\n    address: string;\n    amount_charged: number;\n    amount_received: number;\n    amount_returned: number;\n    redirect?: {\n      return_url: string;\n      status: 'pending' | 'succeeded' | 'failed';\n      url: string;\n    };\n  };\n  status: 'canceled' | 'chargeable' | 'consumed' | 'failed' | 'pending';\n  type:\n    | 'card'\n    | 'three_d_secure'\n    | 'giropay'\n    | 'sepa_bit'\n    | 'ideal'\n    | 'sofort'\n    | 'bancontact';\n  usage: UsageTypes;\n}\n\nexport type UsageTypes = 'reusable' | 'single_use';\nexport type FlowTypes = 'redirect' | 'receiver' | 'code_verification' | 'none';\n\nexport interface SourceParams {\n  id: string;\n  client_secret: string;\n}\n\nexport interface SourceData {\n  type?: string;\n  amount?: number;\n  currency?: string;\n  flow?: FlowTypes;\n  metadata?: { [key: string]: any };\n  owner?: {\n    address?: Address;\n    email?: string;\n    name?: string;\n    phone?: string;\n  };\n  redirect?: {\n    [key: string]: any;\n    return_url: string;\n  };\n  token?: string;\n  usage?: UsageTypes;\n}\n\nexport function isSourceData(sourceData: any): sourceData is SourceData {\n  return 'type' in sourceData;\n}\n\nexport interface SourceResult {\n  source?: Source;\n  error?: Error;\n}\n",
    "import { Error } from './utils';\n\nexport interface Token {\n  id: string;\n  object: 'token';\n  bank_account?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'bank_account';\n    account_holder_name: string;\n    account_holder_type: 'individual' | 'company';\n    bank_name: string;\n    last4: string;\n    routing_number: string;\n    status:\n      | 'new'\n      | 'validated'\n      | 'verified'\n      | 'verification_failded'\n      | 'errored';\n  };\n  card?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'card';\n    address_city: string;\n    address_country: string;\n    address_line1: string;\n    address_line1_check: FieldCheck;\n    address_line2: string;\n    address_state: string;\n    address_zip: string;\n    address_zip_check: FieldCheck;\n    brand: string;\n    cvc_check: FieldCheck;\n    dynamic_last4: string;\n    exp_month: number;\n    exp_year: number;\n    funding: 'credit' | 'debit' | 'prepaid' | 'unknown';\n    last4: string;\n    metadata: { [key: string]: any };\n    name: string;\n    tokenization_method: 'apple_pay' | 'android_pay';\n  };\n  client_ip: string;\n  livemode: boolean;\n  type: 'card' | 'bank_account';\n  used: boolean;\n}\n\nexport type FieldCheck = 'pass' | 'fail' | 'unavailable' | 'unchecked';\n\nexport interface CardDataOptions {\n  name?: string;\n  address_line1?: string;\n  address_line2?: string;\n  address_city?: string;\n  address_state?: string;\n  address_zip?: string;\n  address_country?: string;\n  currency?: string;\n}\n\nexport interface TokenResult {\n  token?: Token;\n  error?: Error;\n}\n\nexport type BankAccount = 'bank_account';\n\nexport interface BankAccountData {\n  country: string;\n  currency: string;\n  routing_number: string;\n  account_number: string;\n  account_holder_name: string;\n  account_holder_type: 'individual' | 'company';\n}\n\nexport type Pii = 'pii';\n\nexport interface PiiData {\n  personal_id_number: string;\n}\n\nexport function isBankAccount(account: any): account is BankAccount {\n  return account === 'bank_account';\n}\n\nexport function isBankAccountData(\n  bankAccountData: any\n): bankAccountData is BankAccountData {\n  return (\n    'country' in bankAccountData &&\n    'currency' in bankAccountData &&\n    'routing_number' in bankAccountData &&\n    'account_number' in bankAccountData &&\n    'account_holder_name' in bankAccountData &&\n    'account_holder_type' in bankAccountData &&\n    (bankAccountData.account_holder_type === 'individual' ||\n      bankAccountData.account_holder_type === 'company')\n  );\n}\n\nexport function isPii(pii: any): pii is Pii {\n  return pii === 'pii';\n}\n\nexport function isPiiData(piiData: any): piiData is PiiData {\n  return 'personal_id_number' in piiData;\n}\n",
    "import { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader, Status } from './api-loader.service';\n\nimport { Options, StripeJS } from '../interfaces/stripe';\nimport { Element } from '../interfaces/element';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { isSourceData, SourceData, SourceParams, SourceResult } from '../interfaces/sources';\nimport {\n  BankAccount,\n  BankAccountData,\n  CardDataOptions,\n  isBankAccount,\n  isBankAccountData,\n  isPii,\n  isPiiData,\n  Pii,\n  PiiData,\n  TokenResult\n} from '../interfaces/token';\nimport { StripeServiceInterface } from './stripe-instance.interface';\nimport { PaymentRequestOptions } from '../interfaces/payment-request';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { fromPromise } from 'rxjs/internal-compatibility';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$: BehaviorSubject<StripeJS | undefined> = new BehaviorSubject<StripeJS | undefined>(undefined);\n\n  constructor(\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: Options\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: Status) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((Stripe: any) => {\n        const stripe = this.options\n          ? (Stripe(this.key, this.options) as StripeJS)\n          : (Stripe(this.key) as StripeJS);\n\n        this.stripe$.next(stripe);\n      });\n  }\n\n  public getInstance(): StripeJS | null | undefined {\n    return this.stripe$.getValue() as StripeJS;\n  }\n\n  public elements(options?: ElementsOptions): Observable<Elements> {\n    return this.stripe$\n      .asObservable()\n      .pipe(\n        filter(stripe => Boolean(stripe)),\n        map(stripe => (stripe as StripeJS).elements(options)),\n        first()\n      );\n  }\n\n  public createToken(\n    a: Element | BankAccount | Pii,\n    b: CardDataOptions | BankAccountData | PiiData | undefined\n  ): Observable<TokenResult> {\n    return this.stripe$\n      .asObservable()\n      .pipe(filter(stripe => Boolean(stripe)),\n        switchMap(s => {\n          const stripe = s as StripeJS;\n\n          if (isBankAccount(a) && isBankAccountData(b)) {\n            return fromPromise(stripe.createToken(a, b));\n          } else if (isPii(a) && isPiiData(b)) {\n            return fromPromise(stripe.createToken(a, b));\n          } else {\n            return fromPromise(\n              stripe.createToken(a as Element, b as CardDataOptions | undefined)\n            );\n          }\n        }),\n        first()\n      );\n  }\n\n  public createSource(\n    a: Element | SourceData,\n    b?: SourceData | undefined\n  ): Observable<SourceResult> {\n    return this.stripe$\n      .asObservable()\n      .pipe(\n        filter(stripe => Boolean(stripe)),\n        switchMap(s => {\n          const stripe = s as StripeJS;\n\n          if (isSourceData(a)) {\n            return fromPromise(stripe.createSource(a as SourceData));\n          }\n          return fromPromise(stripe.createSource(a as Element, b));\n        }),\n        first()\n      );\n  }\n\n  public retrieveSource(source: SourceParams): Observable<SourceResult> {\n    return this.stripe$\n      .asObservable()\n      .pipe(\n        filter(stripe => Boolean(stripe)),\n        switchMap(s => {\n          const stripe = s as StripeJS;\n\n          return fromPromise(stripe.retrieveSource(source));\n        }),\n        first()\n      );\n  }\n\n  public paymentRequest(options: PaymentRequestOptions) {\n    const stripe = this.getInstance();\n    if (stripe) {\n      return stripe.paymentRequest(options);\n    }\n    return undefined;\n  }\n}\n",
    "import { Inject, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Options, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeJS } from '../interfaces/stripe';\nimport { Element } from '../interfaces/element';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { SourceData, SourceParams, SourceResult } from '../interfaces/sources';\nimport { BankAccount, BankAccountData, CardDataOptions, Pii, PiiData, TokenResult } from '../interfaces/token';\nimport { PaymentRequestOptions } from '../interfaces/payment-request';\n\nimport { StripeServiceInterface } from './stripe-instance.interface';\nimport { StripeInstance } from './stripe-instance.class';\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader, Status } from './api-loader.service';\n\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  private stripe: StripeInstance | null = null;\n\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) private key: string,\n    @Inject(STRIPE_OPTIONS) private options: Options,\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.loader, this.window, key, options);\n    }\n  }\n\n  public getStripeReference(): Observable<any> {\n    return this.loader\n      .asStream()\n      .pipe(\n        filter((status: Status) => status.loaded === true),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      );\n  }\n\n  public getInstance() {\n    return this.stripe == null ?\n      this.stripe as null\n      : this.stripe.getInstance() as StripeJS;\n  }\n\n  public setKey(key: string, options?: Options) {\n    return this.changeKey(key, options);\n  }\n\n  public changeKey(key: string, options?: Options) {\n    this.stripe = new StripeInstance(this.loader, this.window, key, options);\n    return this.stripe;\n  }\n\n  public elements(options?: ElementsOptions): Observable<Elements> {\n    if (this.stripe == null) return new Observable<Elements>();\n    return this.stripe.elements(options);\n  }\n\n  public createToken(\n    a: Element | BankAccount | Pii,\n    b: CardDataOptions | BankAccountData | PiiData | undefined\n  ): Observable<TokenResult> {\n    if (this.stripe == null) return new Observable<TokenResult>();\n    return this.stripe.createToken(a, b);\n  }\n\n  public createSource(\n    a: Element | SourceData,\n    b?: SourceData | undefined\n  ): Observable<SourceResult> {\n    if (this.stripe == null)\n      return new Observable<SourceResult>();\n    return this.stripe.createSource(a, b);\n  }\n\n  public retrieveSource(source: SourceParams): Observable<SourceResult> {\n    if (this.stripe == null) return new Observable<SourceResult>();\n    return this.stripe.retrieveSource(source);\n  }\n\n  public paymentRequest(options: PaymentRequestOptions) {\n    if (this.stripe == null) return;\n    return this.stripe.paymentRequest(options);\n  }\n}\n",
    "import { Inject, Injectable } from '@angular/core';\n\nimport { Options, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from '../interfaces/stripe';\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) private baseKey: string,\n    @Inject(STRIPE_OPTIONS) private baseOptions: string,\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef\n  ) {}\n\n  public create(key: string, options?: Options): StripeInstance {\n    return new StripeInstance(this.loader, this.window, key, options);\n  }\n}\n",
    "import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { combineLatest } from 'rxjs/internal/observable/combineLatest';\nimport { filter, switchMap } from 'rxjs/operators';\n\nimport { Element as StripeElement, ElementEventType, ElementOptions } from '../interfaces/element';\nimport { StripeService } from '../services/stripe.service';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { StripeInstance } from '../services/stripe-instance.class';\n\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `\n    <div class=\"field\" #stripeCard></div>\n  `\n})\nexport class StripeCardComponent implements OnInit {\n  @Output() public card = new EventEmitter<StripeElement>();\n  @Output() public on = new EventEmitter<{ type: ElementEventType; event: any }>();\n\n  @ViewChild('stripeCard') private stripeCard: ElementRef | undefined;\n  private element: StripeElement | null = null;\n  private options$ = new BehaviorSubject<ElementOptions>({});\n  private elementsOptions$ = new BehaviorSubject<ElementsOptions>({});\n  private stripe$ = new BehaviorSubject<StripeInstance | null>(null);\n\n  constructor(private stripeService: StripeService) {}\n\n  @Input()\n  private set options(optionsIn: ElementOptions) {\n    this.options$.next(optionsIn);\n  }\n\n  @Input()\n  private set elementsOptions(optionsIn: ElementsOptions) {\n    this.elementsOptions$.next(optionsIn);\n  }\n\n  @Input()\n  private set stripe(stripeIn: StripeInstance) {\n    this.stripe$.next(stripeIn);\n  }\n\n  public ngOnInit() {\n    const elements$: Observable<Elements> = combineLatest(\n      this.elementsOptions$.asObservable(),\n      this.stripe$.asObservable()\n    ).pipe(switchMap(([options, stripe]) => {\n      if (stripe) {\n        if (Object.keys(options).length > 0) {\n          return stripe.elements(options);\n        }\n        return stripe.elements();\n      } else {\n        if (Object.keys(options).length > 0) {\n          return this.stripeService.elements(options);\n        }\n        return this.stripeService.elements();\n      }\n    }));\n    combineLatest(\n      elements$,\n      this.options$.asObservable().pipe(filter(options => Boolean(options)))\n    ).subscribe(([elements, options]) => {\n      this.element = elements.create('card', options);\n\n      this.element.on('blur', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'blur'\n        })\n      );\n\n      this.element.on('change', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'change'\n        })\n      );\n\n      this.element.on('click', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'click'\n        })\n      );\n\n      this.element.on('focus', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'focus'\n        })\n      );\n\n      this.element.on('ready', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'ready'\n        })\n      );\n\n      if (this.stripeCard != null)\n        this.element.mount(this.stripeCard.nativeElement);\n\n      this.card.emit(this.element);\n    });\n  }\n\n  public getCard(): StripeElement | null {\n    return this.element;\n  }\n}\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { LazyStripeAPILoader } from '../services/api-loader.service';\nimport { StripeService } from '../services/stripe.service';\nimport { StripeFactoryService } from '../services/stripe-factory.service';\n\nimport { WindowRef } from '../services/window-ref.service';\nimport { DocumentRef } from '../services/document-ref.service';\n\nimport { Options, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY } from '../interfaces/stripe';\nimport { StripeCardComponent } from '../components/stripe-card.component';\n\nimport 'rxjs/add/observable/combineLatest';\nimport 'rxjs/add/observable/fromPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/first';\nimport 'rxjs/add/operator/map';\n\n@NgModule({\n  declarations: [StripeCardComponent],\n  exports: [StripeCardComponent]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: Options\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n"
  ],
  "names": [
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "WindowRef",
    "platformId",
    "this",
    "prototype",
    "getNativeWindow",
    "isPlatformBrowser",
    "window",
    "type",
    "Injectable",
    "undefined",
    "decorators",
    "Inject",
    "args",
    "PLATFORM_ID",
    "DocumentRef",
    "getNativeDocument",
    "document",
    "LazyStripeAPILoader",
    "status",
    "BehaviorSubject",
    "loaded",
    "loading",
    "asStream",
    "load",
    "asObservable",
    "isReady",
    "getValue",
    "_this",
    "isPlatformServer",
    "hasOwnProperty",
    "Object",
    "assign",
    "script",
    "createElement",
    "async",
    "defer",
    "src",
    "onload",
    "onerror",
    "body",
    "appendChild",
    "STRIPE_PUBLISHABLE_KEY",
    "InjectionToken",
    "STRIPE_OPTIONS",
    "isSourceData",
    "sourceData",
    "isBankAccount",
    "account",
    "isBankAccountData",
    "bankAccountData",
    "account_holder_type",
    "isPii",
    "pii",
    "isPiiData",
    "piiData",
    "StripeInstance",
    "loader",
    "key",
    "options",
    "stripe$",
    "pipe",
    "filter",
    "first",
    "map",
    "Stripe",
    "subscribe",
    "stripe",
    "getInstance",
    "elements",
    "Boolean",
    "createToken",
    "a",
    "b",
    "switchMap",
    "s",
    "fromPromise",
    "createSource",
    "retrieveSource",
    "source",
    "paymentRequest",
    "StripeService",
    "getStripeReference",
    "setKey",
    "changeKey",
    "Observable",
    "StripeFactoryService",
    "baseKey",
    "baseOptions",
    "create",
    "StripeCardComponent",
    "stripeService",
    "card",
    "EventEmitter",
    "on",
    "element",
    "options$",
    "elementsOptions$",
    "defineProperty",
    "set",
    "optionsIn",
    "stripeIn",
    "ngOnInit",
    "elements$",
    "combineLatest",
    "_a",
    "_b",
    "keys",
    "length",
    "ev",
    "emit",
    "event",
    "stripeCard",
    "mount",
    "nativeElement",
    "getCard",
    "Component",
    "selector",
    "template",
    "Output",
    "ViewChild",
    "Input",
    "elementsOptions",
    "NgxStripeModule",
    "forRoot",
    "publishableKey",
    "ngModule",
    "providers",
    "provide",
    "useValue",
    "NgModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
